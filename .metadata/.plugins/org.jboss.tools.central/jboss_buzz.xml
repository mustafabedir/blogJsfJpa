<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Collaboration in open source license enforcement — a community movement is happening</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YYVV4qEtygM/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gpl" scheme="searchisko:content:tags" /><category term="GPL Cooperation Commitment" scheme="searchisko:content:tags" /><category term="lgpl" scheme="searchisko:content:tags" /><category term="license" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><category term="open source license" scheme="searchisko:content:tags" /><category term="open source software" scheme="searchisko:content:tags" /><author><name>Rob Terzi</name></author><id>searchisko:content:id:jbossorg_blog-collaboration_in_open_source_license_enforcement_a_community_movement_is_happening</id><updated>2018-07-27T21:00:21Z</updated><published>2018-07-27T21:00:21Z</published><content type="html">&lt;p&gt;[We are reposting on the Red Hat Developers blog this article from the &lt;a href="https://www.redhat.com/en/blog/collaboration-open-source-license-enforcement-community-movement-happening?source=bloglisting?sc_cid=701f2000000tucqAAA"&gt;Red Hat blog&lt;/a&gt;, which was written by David Levine, assistant general counsel at Red Hat.]&lt;/p&gt; &lt;p&gt;“Discourage litigation. Persuade your neighbors to compromise whenever you can.”&lt;/p&gt; &lt;p&gt;This was Abraham Lincoln speaking in the mid-1800s but his advice is still relevant today. Litigation is almost always a poor tool for fostering collaboration, whether among neighbors or software developers.&lt;/p&gt; &lt;p&gt;In approaching the topic of open source license enforcement, it is important to consider Lincoln’s advice. Collaboration during open source license enforcement is a key to successful compliance just as it is an important element to success in the software development process. In assessing license enforcement tactics, you need to ask whether they will foster greater collaboration in &lt;a href="https://www.redhat.com/en/open-source"&gt;open source software&lt;/a&gt; development. If the ultimate result of excessive or abusive enforcement is that developers and enterprises are turned off from participating in upstream open source communities, the ecosystems will wither and we all suffer as a result.&lt;/p&gt; &lt;p&gt;&lt;span id="more-511167"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;What good is enforcement if no one is engaging in open source development?&lt;/p&gt; &lt;p&gt;At a minimum, license enforcement should be conducted in a manner that is fair and predictable. This means providing a chance to correct inadvertent errors in license compliance &amp;#8212; a common-sense idea that is now gathering great momentum.&lt;/p&gt; &lt;p&gt;Today, &lt;a href="https://www.redhat.com/en/about/press-releases/movement-builds-diverse-group-14-additional-leaders-seek-greater-predictability-open-source-licensing"&gt;Red Hat announced&lt;/a&gt; that another wave of leading companies &amp;#8212; Amazon, Arm, Canonical, GitLab, Intel, Liferay, Linaro, MariaDB, NEC, Pivotal, Royal Philips, SAS, Toyota, and VMware &amp;#8212; has joined Red Hat and nine other forward-thinking companies in rejecting harsh tactics in the enforcement of open source licenses. Following the lead of the open source development community, the move today reflects the growing strength of the norms in the open source community about the importance of responsible license compliance and supports the long-held belief that individual trolling for personal or corporate gain is not appropriate in the open source ecosystem. Today’s announcement brings the total number of companies who have adopted this approach to 24. The list of companies comes from across industries and geographies, all of whom have agreed to apply the principle of fairness in license enforcement.&lt;/p&gt; &lt;p&gt;For those who review and negotiate commercial contracts on a regular basis, the idea of a reasonable notice and opportunity to fix problems may seem obvious but this wasn’t always the case for the GPL. Version 2 of the GPL and LGPL do not contain express “cure” periods to fix problems before the licenses are terminated. In an earlier era, the &lt;a href="https://www.fsf.org/"&gt;Free Software Foundation&lt;/a&gt; (FSF) owned the copyrights for nearly all GPL-licensed code and was the only copyright holder regularly engaged in license enforcement. At that time, the idea of automatic termination in the hands of a benevolent license steward may have seemed appropriate to encourage and enforce license compliance. But, over time, there was an increasing volume of GPL and LGPL-licensed software that was distributed by a growing body of copyright holders (i.e., many potential license enforcers). A consensus began to form that automatic termination could result in potential unfairness and opportunities for abusive enforcement. When the FSF, with the guidance and assistance of the &lt;a href="https://www.softwarefreedom.org/"&gt;Software Freedom Law Center&lt;/a&gt;, ultimately released GPLv3 in 2007, one of its new features was the introduction of a cure period for license noncompliance and mechanisms for license reinstatement when compliance errors were promptly fixed.&lt;/p&gt; &lt;p&gt;Following the release of GPLv3, the FSF encouraged existing GPLv2 projects to adopt GPLv3. While many projects did move, there is still a large body of code that continues to be licensed under version 2. Some projects have chosen not to move and others were unable to do so due to license selection upstream or other reasons.&lt;/p&gt; &lt;p&gt;At the same time, the use of open source software has become increasingly ubiquitous across a growing number of industries &amp;#8212; it is fast becoming the very foundation of cloud computing. An increasing number of companies in a variety of industries ranging from automobiles to banks to consumer products are now contributing to, distributing, and using open source software within their enterprises and product portfolios. The diversity and volume of open source code used in products today have now become so large that it is no longer reasonable to expect that there will be 100 percent compliance all of the time. The potential for abusive enforcement of the automatic termination provisions of the GPLv2 became concerning to developers and community enforcement organizations who have been coalescing behind the position that heavy-handed approaches to license enforcement are out of place in the community.&lt;/p&gt; &lt;p&gt;This movement to adopt the GPLv3 cure approach for GPLv2 licensed–code originated with community-focused organizations and developers and, as today’s announcement demonstrates, is now being adopted by leading companies across industries and geographies. The approach has been adopted by more than 100 &lt;a href="https://www.kernel.org/doc/html/latest/process/kernel-enforcement-statement.html"&gt;Linux kernel developers&lt;/a&gt; and by &lt;a href="https://www.redhat.com/en/blog/gpl-cooperation-commitment-and-red-hat-projects"&gt;Red Hat-led projects&lt;/a&gt;. In addition, a growing number of individual open source developers are adding their names to the GPL Cooperation Commitment for their own GPLv2 and LGPLv2, and LGPLv2.1 copyrighted code through a &lt;a href="https://gplcc.github.io/gplcc/"&gt;repository hosted on GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Starting from a concept first embodied in GPLv3, the idea of affording GPLv2 and LGPLv2.x licensees the same opportunity to correct errors in compliance is now catching hold: the &lt;a href="https://www.linuxfoundation.org/"&gt;Linux Foundation&lt;/a&gt; and its work with the &lt;a href="https://www.kernel.org/doc/html/v4.16/process/kernel-enforcement-statement.html"&gt;Linux kernel developers&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/blog/gpl-cooperation-commitment-and-red-hat-projects"&gt;Red Hat projects&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/about/press-releases/movement-builds-diverse-group-14-additional-leaders-seek-greater-predictability-open-source-licensing"&gt;24 companies&lt;/a&gt;, and more than &lt;a href="https://github.com/gplcc/gplcc/blob/master/Individual/README-INDIVIDUAL.md"&gt;100 developers&lt;/a&gt; &amp;#8212; all adopting the GPLv3 cure approach for GPLv2 and LGPLv2.x licensed–code.&lt;/p&gt; &lt;p&gt;Red Hat intends to continue its effort to encourage other companies, projects, and developers to adopt the GPL Cooperation Commitment and to support approaches to license enforcement that foster greater collaboration in open source software development.&lt;/p&gt; &lt;p&gt;Innovation takes a village, and fairness and predictability are keys to growing that village.&lt;/p&gt; &lt;p&gt;Visit the &lt;a href="https://gplcc.github.io/gplcc/"&gt;GPL Cooperation Commitment&lt;/a&gt; GitHub page if you or your company are interested in joining.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;linkname=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F27%2Fcollaboration-in-open-source-license-enforcement-a-community-movement-is-happening%2F&amp;#38;title=Collaboration%20in%20open%20source%20license%20enforcement%20%E2%80%94%20a%20community%20movement%20is%20happening" data-a2a-url="https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/" data-a2a-title="Collaboration in open source license enforcement — a community movement is happening"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/"&gt;Collaboration in open source license enforcement &amp;#8212; a community movement is happening&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YYVV4qEtygM" height="1" width="1" alt=""/&gt;</content><summary>[We are reposting on the Red Hat Developers blog this article from the Red Hat blog, which was written by David Levine, assistant general counsel at Red Hat.] “Discourage litigation. Persuade your neighbors to compromise whenever you can.” This was Abraham Lincoln speaking in the mid-1800s but his advice is still relevant today. Litigation is almost always a poor tool for fostering collaboration, ...</summary><dc:creator>Rob Terzi</dc:creator><dc:date>2018-07-27T21:00:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/</feedburner:origLink></entry><entry><title>jBPM Workitems Spotlight - GitHub and Slack</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lgx6AZNA6V0/jbpm-workitems-spotlight-github-and.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_workitems_spotlight_github_and_slack</id><updated>2018-07-26T19:10:14Z</updated><published>2018-07-26T19:05:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;So far we have posted a number of articles describing the &lt;a href="https://github.com/kiegroup/jbpm-work-items"&gt;jBPM Workitem Repository&lt;/a&gt; and its features but there was little mention about its actual content and the powerful integration capabilities it brings to your business processes.&lt;br /&gt;&lt;br /&gt;Currently the workitem repository includes 25 different workitem groups and a total of 57 individual workitem handlers. These include various integration services with Google,&amp;nbsp; Dropbox, IBM, Twitter and many more. New workitems can easily be added as was described in &lt;a href="http://mswiderski.blogspot.com/2018/04/jbpm-work-items-are-really-simple.html"&gt;this previous article&lt;/a&gt;.&amp;nbsp; Given that the number of workitems in growing at a steady pace we thought to start showcasing them with simple working examples that you can take and use to start implementing your custom integration solutions.&lt;br /&gt;&lt;br /&gt;In this article we will focus on two workitem groups, namely GitHub and Slack:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-MHgfbiGhVfQ/W1oN32ix-jI/AAAAAAAAhHk/9zvIgQ76gGI5I4s58KwnGEqfLY2CbG05wCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.45%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="466" data-original-width="1600" height="116" src="https://1.bp.blogspot.com/-MHgfbiGhVfQ/W1oN32ix-jI/AAAAAAAAhHk/9zvIgQ76gGI5I4s58KwnGEqfLY2CbG05wCLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.45%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-qQxDMJTM0CM/W1oN354vDZI/AAAAAAAAhHg/nuDT3UYI7_kZd1nmIKzB3IyBkm23D0kMACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.54%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="316" data-original-width="1600" height="78" src="https://4.bp.blogspot.com/-qQxDMJTM0CM/W1oN354vDZI/AAAAAAAAhHg/nuDT3UYI7_kZd1nmIKzB3IyBkm23D0kMACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.17.54%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;For our simple example to showcase these workitems we will create a business process which fetches all open issues from one of your GitHub repositories, accumulate them into a message and then send this message to a specified channel on Slack notifying you of these open issues and give you simple links to each so you can start addressing them.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;First let's look at the pre-requisites for each of the workitems. To start using GitHub workitems the required information is your login data, namely your username and password. For this example we will use the &lt;a href="https://github.com/kiegroup/jbpm-work-items/blob/master/github-workitem/src/main/java/org/jbpm/process/workitem/github/FetchIssuesWorkitemHandler.java"&gt;FetchIssuesWorkitemHandler&lt;/a&gt;&amp;nbsp;where you will also need to know the name of the repository where you want to fetch the issues from.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;To start using the Slack workitem handlers you need to first create a Slack App. Follow &lt;a href="https://api.slack.com/"&gt;this link&lt;/a&gt; to get started with that. Once you create your app make sure to enable OAuth so Slack will create an access token for it. This access token is then passed to the workitem handler as it needs it for authentication with the Slack service. The workitem handler we will use here is &lt;a href="https://github.com/kiegroup/jbpm-work-items/blob/master/slack-workitem/src/main/java/org/jbpm/process/workitem/slack/PostMessageToChannelWorkitemHandler.java"&gt;PostMessageToChannelWorkitemHandler&lt;/a&gt;&amp;nbsp;which also needs the name of one of the channels your slack app has access posting messages to.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;To follow this example we also assume that you have the KIE workbench+server set up and ready but if you don't you can follow &lt;a href="http://mswiderski.blogspot.com/2018/06/single-zip-distribution-for-jbpm.html"&gt;this article&lt;/a&gt; to do that literally in minutes. We also assume that you have an existing GitHub repository set up with some real or test issues defined. If you don't you could use &lt;a href="https://github.com/tsurdilo/testrepo"&gt;this test one&lt;/a&gt;.&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-wNrnf1iUP5s/W1oSzkTH3mI/AAAAAAAAhH0/i_Bjw6cSr5IJbK5ft7il6MpJtZn9cbcRwCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.39.09%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="779" data-original-width="1600" height="155" src="https://4.bp.blogspot.com/-wNrnf1iUP5s/W1oSzkTH3mI/AAAAAAAAhH0/i_Bjw6cSr5IJbK5ft7il6MpJtZn9cbcRwCLcBGAs/s320/Screen%2BShot%2B2018-07-26%2Bat%2B2.39.09%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Test GitHub repo with some test issues&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;With our KIE worbench running log in and create a new project. Within this project create a new business process (with legacy editor as it's currently only one capable of installing workitems from a repository).&amp;nbsp; Click on the repository icon in the process editor menu bar and connect to your running service repository&lt;br /&gt;&lt;div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-AVtBmpvye24/W1oUBwqJwJI/AAAAAAAAhIA/1amJ_FVZB6c8N2_ySD_77GyivyqFdkTKwCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B12.12.24%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="744" data-original-width="1600" height="148" src="https://4.bp.blogspot.com/-AVtBmpvye24/W1oUBwqJwJI/AAAAAAAAhIA/1amJ_FVZB6c8N2_ySD_77GyivyqFdkTKwCLcBGAs/s320/Screen%2BShot%2B2018-07-26%2Bat%2B12.12.24%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Installing workitems from workbench legacy bpmn2 editor&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Find the two workitem handlers we mentioned earlier, namely FetchIssuesWorkitemHandler and PostMessageToChannelWorkitemHandler and click on the little wrench icon next to each to install them into your workbench. Note that the install also updates your project pom with all necessary maven dependencies to execute these workitems as well as your projects deployment descriptor xml.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To finish the setup we do need to edit the projects deployment descriptor slightly, passing in our login information to the github workitem as well as the Slack access token created to the slack workitem so they can authenticate with their respective services correctly:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For this in the project explorer navigate to your projects /src/main/resources/META-INF directory and edit the kie-deployment-descriptor.xml file. Note that under the work-item-handlers element in this xml file the workitem installer has already added the definitions of two workitem handlers we want to use, however it needs to be slightly changed to add the sensitive info we talked about:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So for the GitHub handler we need to add:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;lt;identifier&amp;gt;new org.jbpm.process.workitem.github.FetchIssuesWorkitemHandler("&lt;b&gt;YOUR_GITHUB_LOGIN_NAME&lt;/b&gt;", "&lt;b&gt;YOUR_GITHUB_LOGIN_PASSWORD&lt;/b&gt;")&amp;lt;/identifier&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and for the Slack handler:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;lt;identifier&amp;gt;new org.jbpm.process.workitem.slack.PostMessageToChannelWorkitemHandler("&lt;b&gt;YOUR_SLACK_APP_ACCESS_TOKEN&lt;/b&gt;")&amp;lt;/identifier&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Note that in the image below I have cut off the sensitive info as I used my personal login information when making the demo&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-WpydQi0y7dA/W1oWmnZ6BbI/AAAAAAAAhIM/SqhnXmhxHRgv-3iYT2ktOXZ7TPde_k2kACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B2.50.40%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="779" data-original-width="1600" height="193" src="https://3.bp.blogspot.com/-WpydQi0y7dA/W1oWmnZ6BbI/AAAAAAAAhIM/SqhnXmhxHRgv-3iYT2ktOXZ7TPde_k2kACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B2.50.40%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;Modifying the kie deployment descriptor&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Now we should be all set up to create our business process. You can download or import the one used in this example from &lt;a href="https://gist.github.com/tsurdilo/98d5fffc0489b5c9ce0b234eb9d2f1fa"&gt;this Gist&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-KpL6-_xngKk/W1oX2KzB3II/AAAAAAAAhIc/8YBwAWm2p5YJ1XQ4tmQOrAPnuKuHoEFNACLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B1.55.42%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="789" data-original-width="1600" height="196" src="https://2.bp.blogspot.com/-KpL6-_xngKk/W1oX2KzB3II/AAAAAAAAhIc/8YBwAWm2p5YJ1XQ4tmQOrAPnuKuHoEFNACLcBGAs/s400/Screen%2BShot%2B2018-07-26%2Bat%2B1.55.42%2BPM.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Our test business process&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;The example process first fetches all open issues from our testrepo GitHub repository. This list is then saved in a process variable which the script task iterates to create a message. The created message is then used by the Slack workitem to connect to your defined channel and create a new post to it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You can now build and deploy your worbench process and start and instance of our example process&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-_UAw-sZjs5U/W1oZJpFPqUI/AAAAAAAAhIw/r8UQ2BCkt54nVbToTx1QhqgLC8raK8h8ACEwYBhgL/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B3.06.02%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="749" data-original-width="1600" height="149" src="https://3.bp.blogspot.com/-_UAw-sZjs5U/W1oZJpFPqUI/AAAAAAAAhIw/r8UQ2BCkt54nVbToTx1QhqgLC8raK8h8ACEwYBhgL/s320/Screen%2BShot%2B2018-07-26%2Bat%2B3.06.02%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Starting new instance of the example process&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-L_GaftGhuKc/W1oZ5JpvECI/AAAAAAAAhI4/aieCIimUVnkty0tHCasQlT5rx7_Cy8HfgCEwYBhgL/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B3.08.39%2BPM.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="800" data-original-width="1600" height="160" src="https://3.bp.blogspot.com/-L_GaftGhuKc/W1oZ5JpvECI/AAAAAAAAhI4/aieCIimUVnkty0tHCasQlT5rx7_Cy8HfgCEwYBhgL/s320/Screen%2BShot%2B2018-07-26%2Bat%2B3.08.39%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Process instance completed info panel&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;Once the process has completed execution you should see in your Slack channel the result message:&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-do6Soo03-8s/W1oajn5oYuI/AAAAAAAAhI8/pT4Cyo5qvdMt9whs3u6AxRG_7gGCn20IgCLcBGAs/s1600/Screen%2BShot%2B2018-07-26%2Bat%2B1.52.45%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="211" data-original-width="1600" height="84" src="https://1.bp.blogspot.com/-do6Soo03-8s/W1oajn5oYuI/AAAAAAAAhI8/pT4Cyo5qvdMt9whs3u6AxRG_7gGCn20IgCLcBGAs/s640/Screen%2BShot%2B2018-07-26%2Bat%2B1.52.45%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;And that's it :) Let us know what other workitems you would like to see featured next.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lgx6AZNA6V0" height="1" width="1" alt=""/&gt;</content><summary>So far we have posted a number of articles describing the jBPM Workitem Repository and its features but there was little mention about its actual content and the powerful integration capabilities it brings to your business processes. Currently the workitem repository includes 25 different workitem groups and a total of 57 individual workitem handlers. These include various integration services wit...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-07-26T19:05:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/07/jbpm-workitems-spotlight-github-and.html</feedburner:origLink></entry><entry><title>Announcing the DevConf.US 2018 developer conference</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/X3N4PQm5Gz4/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="artificial intelligence" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="devconf" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FOSS" scheme="searchisko:content:tags" /><category term="machine learning" scheme="searchisko:content:tags" /><category term="middleware" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-announcing_the_devconf_us_2018_developer_conference</id><updated>2018-07-26T16:10:43Z</updated><published>2018-07-26T16:10:43Z</published><content type="html">&lt;p&gt;I am happy to announce that DevConf.US &lt;a href="https://www.eventbrite.com/e/devconfus-2018-tickets-43966825960"&gt;registration is now open&lt;/a&gt; and the &lt;a href="https://devconfus2018.sched.com/"&gt;schedule&lt;/a&gt; is live. DevConf events are free, but online registration is required. If you are available August 17–19, 2018, we would love for you to come and participate.&lt;/p&gt; &lt;p&gt;Similar to DevConf.CZ, &lt;a href="https://devconf.info/us/"&gt;DevConf.us 2018&lt;/a&gt; is the 1st annual, free, &lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; sponsored technology conference for community project and professional contributors to Free and Open Source technologies (FOSS) at the Boston University in the historic city of Boston, USA.&lt;/p&gt; &lt;p&gt;You should consider attending this DevConf event if you are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A developer&lt;/li&gt; &lt;li&gt;A technology architect&lt;/li&gt; &lt;li&gt;An IT consultant&lt;/li&gt; &lt;li&gt;An IT student or a teacher from an IT university/faculty&lt;/li&gt; &lt;li&gt;Or simply an IT enthusiast interested in the latest trends in open source and emerging digital technologies&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-510537"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The primary event themes this year are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Containers and orchestration&lt;/li&gt; &lt;li&gt;Machine Learning and Artificial Intelligence&lt;/li&gt; &lt;li&gt;Serverless computing&lt;/li&gt; &lt;li&gt;Middleware technologies&lt;/li&gt; &lt;li&gt;Operating Systems&lt;/li&gt; &lt;li&gt;Testing, Debugging, Tracing and Software Quality&lt;/li&gt; &lt;li&gt;User Experience&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Check &lt;a href="https://devconfus2018.sched.com/"&gt;the schedule&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;The event will be held at the &lt;a href="https://goo.gl/maps/Lh4eo94Adpj"&gt;George Sherman Union&lt;/a&gt; building on the Boston University campus.  DevConf events are free, without admission or ticket charge. On-line registration is required though. Talks, presentations, and workshops will all be in English. For more information, please visit &lt;a href="https://devconf.info/us/"&gt;devconf.us&lt;/a&gt; or contact us at &lt;a href="mailto:info@devconf.us"&gt;info@devconf.us&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;On Thursday, August 16th, the day before the main event, there will be a day of &lt;a href="https://wiki.centos.org/Events/Dojo/DevConfUS2018" target="_blank" rel="noopener"&gt;CentOS talks and community gatherings&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://devconf.info/us/"&gt;Register now&lt;/a&gt; and join us in Boston!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;linkname=Announcing%20the%20DevConf.US%202018%20developer%20conference" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fannouncing-the-devconf-us-2018-developer-conference%2F&amp;#38;title=Announcing%20the%20DevConf.US%202018%20developer%20conference" data-a2a-url="https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/" data-a2a-title="Announcing the DevConf.US 2018 developer conference"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/"&gt;Announcing the DevConf.US 2018 developer conference&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/X3N4PQm5Gz4" height="1" width="1" alt=""/&gt;</content><summary>I am happy to announce that DevConf.US registration is now open and the schedule is live. DevConf events are free, but online registration is required. If you are available August 17–19, 2018, we would love for you to come and participate. Similar to DevConf.CZ, DevConf.us 2018 is the 1st annual, free, Red Hat sponsored technology conference for community project and professional contributors to F...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-07-26T16:10:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/26/announcing-the-devconf-us-2018-developer-conference/</feedburner:origLink></entry><entry><title>This week in JBoss, 26th of July 2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4_tZJkIvOrE/this-week-in-jboss-26th-of-july-2018" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><author><name>Paul Robinson</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_26th_of_july_2018</id><updated>2018-07-26T16:07:02Z</updated><published>2018-07-26T16:07:02Z</published><content type="html">&lt;!-- [DocumentBodyStart:02adbd1f-7866-47b4-9842-2b7a29d2af7c] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Welcome to the weekly roundup from the JBoss Community. Read on for an overview of the week's news and releases.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://www.optaplanner.org/blog/2018/07/25/HowToDefeatGerrymanderingAndCreateFairElections.html" rel="nofollow"&gt;How to defeat gerrymandering and create fair elections&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Over the years, politicians have redrawn electoral voting lines to gain an unfair advantage. This has led to district boundaries with shapes that have no obvious pattern or reason other than political gain. When districts are redrawn you can sway an elections results without changing a single voter&amp;#8217;s mind. Can OptaPlanner draw fair electoral boundaries and save democracy?&lt;/p&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/easy_workitem_installation_jbpm_workitem_repository" rel="nofollow"&gt;Easy Workitem installation (jBPM WorkItem Repository)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The jBPM team has added the ability to install workitems hosted by the&amp;#160; jBPM Workitem Repository on any running KIE Worbench instance directly from the repository. itself This lifts some limitations of installing workitems which was so far only possible from within process editors inside each running workbench. It also allows for future integrations with other runtime systems that can take advantage of the hosted workitems.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_4" rel="nofollow"&gt;3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 4)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;span style="color: #424242; font-family: Cabin, sans-serif; font-size: 16px;"&gt;This article series highlights three pitfalls you should be aware of when transitioning into hybrid multicloud environments.&lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/enterprise_integration_for_ethereum" rel="nofollow"&gt;Enterprise Integration for Ethereum&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Ethereum is distributed and decentralized, but it is mostly a closed system with the embedded ledger, the currency, and the executing nodes. In order to be useful for the enterprise, Ethereum has to be well integrated with existing legacy and new systems. In this post Bilgin Ibryam presents the Apache Camel Connector for Ethereum.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://hal.github.io/blog/inspect-http-sessions/" rel="nofollow"&gt;Inspect HTTP Sessions in Undertow&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The Undertow WildFly subsystem has been enhanced and provides new operations to inspect HTTP sessions.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="https://hal.github.io/blog/configuration-changes/" rel="nofollow"&gt;Log all configuration changes to WildFly&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There is a feature to record all configuration changes to an in-memory log per host or server, it records any change performed on Wildfly, for example: deploy an application, add a datasource, change any configuration, add any resource. This blog post will show how it works.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/five_advantages_of_log_based_change_data_capture" rel="nofollow"&gt;Five Advantages of Log-Based Change Data Capture&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Gunnar Morling answers the question of "why use a log-based change data capturing tool such as Debezium over simply polling for updated records?"&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/performance_baseline_for_jbpm_7_7_8_0" rel="nofollow"&gt;Performance baseline for jBPM 7 (7.8.0)&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The aim of this article is to measure the base performance of jBPM so as to set a baseline and to answer the basic question of how good jBPM performs when it comes to execution. This is not to be seen as competitive information or show that jBPM is faster or slower than other engines, but more for setting a stage and open the door for more performance tests that can be performed in different types of environments.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/red_hat_process_automation_manager_v7_0" rel="nofollow"&gt;Red Hat Process Automation Manager v7.0&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Kris Verlaenen introduces &lt;em&gt;Red Hat Process Automation Manager v7.0&lt;/em&gt;. This is the latest major release of &lt;em&gt;Red Hat JBoss BPM Suite&lt;/em&gt; product, which brings with it a product rename that reflects the broadened scope of the software.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/maciej_swiderski_is_the_new_jbpm_community_lead" rel="nofollow"&gt;Maciej Swiderski is the new jBPM community lead&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post Kris Verlaenen announces that Maciej (aka "Magic") Swiderski will officially become the new jBPM community lead.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_orm_5_3_3_final_released" rel="nofollow"&gt;Hibernate ORM 5.3.3.Final&lt;/a&gt;. Includes support for JDK 11.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/third_maintenance_release_for_hibernate_search_5_10" rel="nofollow"&gt;Hibernate Search 5.10.3&lt;/a&gt;. Third maintenance release of Hibernate Search 5.10.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_validator_6_0_11_final_released" rel="nofollow"&gt;Hibernate Validator 6.0.11.Final&lt;/a&gt;. Includes support for JDK 11 and other bug fixes.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/byteman_4_0_4_has_been_released" rel="nofollow"&gt;Byteman 4.0.4&lt;/a&gt;. Brings JDK 11 compatibility to Byteman.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_9_3_1_final_and_9_4_0_alpha1" rel="nofollow"&gt;Infinispan 9.3.1.Final&lt;/a&gt;.&amp;#160; Includes some important bug fixes, and we recommend all users of 9.3.0.Final to upgrade.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_9_3_1_final_and_9_4_0_alpha1" rel="nofollow"&gt;Infinispan 9.4.0.Alpha1&lt;/a&gt;. The first iteration towards Infinispan's next big release.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/infinispan_spark_connector_0_8_released" rel="nofollow"&gt;Infinispan Spark connector 0.8&lt;/a&gt;. Provides compatibility with Spark 2.3 and Infinispan 9.3&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:02adbd1f-7866-47b4-9842-2b7a29d2af7c] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4_tZJkIvOrE" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the weekly roundup from the JBoss Community. Read on for an overview of the week's news and releases.   How to defeat gerrymandering and create fair elections Over the years, politicians have redrawn electoral voting lines to gain an unfair advantage. This has led to district boundaries with shapes that have no obvious pattern or reason other than political gain. When districts are redr...</summary><dc:creator>Paul Robinson</dc:creator><dc:date>2018-07-26T16:07:02Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/07/26/this-week-in-jboss-26th-of-july-2018</feedburner:origLink></entry><entry><title>Detecting credit card fraud with Red Hat Decision Manager 7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HdMXRDAKOI4/" /><category term="Business Rules" scheme="searchisko:content:tags" /><category term="event processing" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="jboss bpm suite" scheme="searchisko:content:tags" /><category term="JBoss BRMS" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Decision Manager" scheme="searchisko:content:tags" /><category term="rules" scheme="searchisko:content:tags" /><author><name>Duncan Doyle</name></author><id>searchisko:content:id:jbossorg_blog-detecting_credit_card_fraud_with_red_hat_decision_manager_7</id><updated>2018-07-26T11:00:20Z</updated><published>2018-07-26T11:00:20Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/red-hat-decision-manager/overview/"&gt;Red Hat Decision Manager&lt;/a&gt; provides a vast array of decision management functionality. From the Decision Tables feature in the new Decision Model and Notation (DMN) v1.1, which implements the full FEEL Compliance Level 3 of the DMN specification, to Predictive Model Markup Language (PMML).&lt;/p&gt; &lt;p&gt;Another powerful feature is the Complex Event Processing (CEP) engine. This engine provides the ability to detect, correlate, abstract, aggregate or compose and react to events. In other words, the technology provides techniques to infer complex events from simple events, react to the events of interest, and take actions. The main difference between CEP and &lt;i&gt;normal&lt;/i&gt; rules execution is the notion of time. Where standard rules execution in Decision Manager deals with facts and reasoning over these facts, the CEP engine focusses on events. An event represents a significant change of state at a particular point in time or interval.&lt;/p&gt; &lt;p&gt;Recently, I was asked to demonstrate how Decision Manager CEP can be used in a real-time credit card fraud detection system. One of the requirements I was presented with ended up in an interesting rule implementation that forms the basis of this article. The requirement was defined as follows:&lt;/p&gt; &lt;p&gt;&lt;span id="more-509847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;&amp;#8220;When a credit-card transaction enters the system, fetch the context of that transaction from a datastore, where the context is defined as an {x} number of previous transactions of the same credit card. When, within the last 15 minutes of the current transaction, there were three or more additional transactions with the same card, and of those transactions, at least two were within 10 seconds of each other, raise a ‘potential fraud’ alert.”&lt;/em&gt;&lt;/p&gt; &lt;p&gt;When we look at the requirement in more detail, we can identify some interesting time-based constraints. Let’s analyze them one by one and gradually build our CEP rule. Let’s assume that the logic to fetch the context of the current transaction (the {x} number of previous transactions) from the datastore is given and the transactions have been inserted into the CEP engine.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Constraints&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;1) Were there four or more transactions in the last 15 minutes?&lt;/p&gt; &lt;p&gt;1-a) This requirement has the notion of a window: a time-based window of 15 minutes, to be more precise, that will capture all the credit-card transactions that happened within that timespan. In Decision Manager, this can be implemented using the &lt;code&gt;accumulate&lt;/code&gt; construct with a &lt;i&gt;time-window&lt;/i&gt; construct. The &lt;code&gt;accumulate&lt;/code&gt; construct is defined as follows:&lt;/p&gt; &lt;pre&gt;accumulate( &amp;#60;source pattern&amp;#62;; &amp;#60;functions&amp;#62; [;&amp;#60;constraints&amp;#62;] )&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s start with the source pattern in which we accumulate all credit-card transactions in our time window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions&lt;/pre&gt; &lt;p&gt;This states that we want to accumulate all &lt;code&gt;CreditCardTransaction&lt;/code&gt; events from the entry point &lt;code&gt;Transactions&lt;/code&gt; that have occurred in the last 15 minutes.&lt;/p&gt; &lt;p&gt;1-b) Now that we have defined the logic to accumulate all transactions that occurred in the last 15 minutes, we need to define the so-called &lt;em&gt;accumulate functions&lt;/em&gt; to do something with this data. If we look at the requirement, we can see that we need to implement a constraint that determines whether there were 4 or more transactions in the last 15 minutes. We can, therefore, use the &lt;code&gt;count&lt;/code&gt; accumulate function to count the number of transactions in our time window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions;               $nrOfTransactions: count($cct)&lt;/pre&gt; &lt;p&gt;1-c) Now that we’ve counted the number of transactions, we can implement the constraint that checks whether we have four or more transactions in this window:&lt;/p&gt; &lt;pre&gt;accumulate ($cct:CreditCardTransaction() over window:time(15m) from entry-point Transactions; $nrOfTransactions: count($cct);               $nrOfTransactions &amp;#62;= 4)&lt;/pre&gt; &lt;p&gt;2) The second requirement of this rule is that in the set of four or more transactions, there are at least two transactions that occurred within 10 seconds of each other.&lt;/p&gt; &lt;p&gt;2-a) To fulfill this requirement, we need to have access to the &lt;code&gt;CreditCardTransaction&lt;/code&gt; events within our window. We do this by using a second accumulate function called &lt;code&gt;collectList&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4)&lt;/pre&gt; &lt;p&gt;2-b) Now that we have access to the collection (list) of events, we can start comparing them. We need to check whether two &lt;code&gt;CreditCardTransaction&lt;/code&gt; events occurred within 10 seconds of each other. To do this, we use the temporal operator &lt;code&gt;after&lt;/code&gt; to analyze the temporal distance between two events. The two constraints look like this:&lt;/p&gt; &lt;pre&gt;$c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list&lt;/pre&gt; &lt;p&gt;Note that the second constraint defines that the &lt;code&gt;CreditCardTransaction&lt;/code&gt; is not the same as the &lt;code&gt;CreditCardTransaction&lt;/code&gt; selected in the first constraint and that this event occurred within 10 seconds &lt;code&gt;after&lt;/code&gt; the other event.&lt;/p&gt; &lt;p&gt;We can now combine our constraints into the complete left-hand-side (LHS) of our rule:&lt;/p&gt; &lt;pre&gt;accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4) $c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list&lt;/pre&gt; &lt;h2&gt;&lt;b&gt;Actions&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;With the constraints implemented, we can now define the right-hand-side (RHS), or action, of our rule. In this example, we will introduce a new fact into the rules engine. This is a concept we call &lt;i&gt;inference&lt;/i&gt;. This enables us to define additional rules that define constraints and actions on the newly inferred information/facts/events, thus creating a more complex rule base. Our final rule looks like this:&lt;/p&gt; &lt;pre&gt;rule "CC-Transactions last 15 minutes" when accumulate ($cct: CreditCardTransaction() over window:time (15m) from entry-point Transactions; $nrOfTransactions : count($cct), $list: collectList($cct); $nrOfTransactions &amp;#62;= 4) $c1: CreditCardTransaction() from $list $c2: CreditCardTransaction(this != $c1, this after[0s, 10s] $c1) from $list then System.out.println("\nFound 4 or more cc transactions in last 15 minutes of current transaction"); System.out.println("And within that collection, there are 2 transactions within 10 seconds of each other.\n"); PotentialFraudFact potentialFraud = new PotentialFraudFact(); potentialFraud.setTransactions(new java.util.ArrayList()); potentialFraud.setCreditCardNumber($c1.getCreditCardNumber()); potentialFraud.getTransactions().add($c1); potentialFraud.getTransactions().add($c2); insert(potentialFraud); end&lt;/pre&gt; &lt;p&gt;Note that the &lt;code&gt;System.out.println&lt;/code&gt; statements are used for demonstration purposes only; it’s not recommended to use this kind of statements in production rules. Also note that at the end of our RHS, we &lt;code&gt;insert&lt;/code&gt; the new &lt;code&gt;PotentialFraudFact&lt;/code&gt; into the rules engine.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Inference&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;Having the inferred &lt;code&gt;PotentialFraudFact&lt;/code&gt; inserted into the CEP session enables us to write the following rule that reacts to this fact:&lt;/p&gt; &lt;pre&gt;rule "Found potential fraud" when exists PotentialFraudFact() then System.out.println("\n!!!! Found a potential fraud!!!!\n"); end&lt;/pre&gt; &lt;p&gt;This rule defines that an alarm is raised whenever one or multiple rules detect a potential fraud. Again, the &lt;code&gt;System.out.println&lt;/code&gt; statement is used only for demonstration purposes. In a real rule base, the action of such a rule could be to start a fraud investigation case in the Red Hat Process Automation Manager Case Management engine that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;blocks the credit card&lt;/li&gt; &lt;li&gt;notifies the user&lt;/li&gt; &lt;li&gt;and notifies an agent of the bank of the potential fraud&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Demo Project&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;A demo project that showcases the rules in this article can be found here: &lt;a href="https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo"&gt;https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It’s a simple project in which credit-card transactions are defined in, and loaded from, a &lt;a href="https://github.com/DuncanDoyle/drools-credit-card-fraud-detection-demo/blob/master/src/main/resources/ccTransactions.csv"&gt;CSV file&lt;/a&gt;. To run the project, simply run the &lt;code&gt;Main&lt;/code&gt; class from an IDE (Eclipse, IntelliJ, etc.) or use the following Maven command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;mvn clean compile exec:java&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The detection of a potential fraud will be shown in the logs.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;The Complex Event Processing engine of &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/decision-manager"&gt;Red Hat Decision Manager 7&lt;/a&gt; allows users to implement complex, time-based requirements on streams of data in concise and focused rules that use advanced constructs such as the  &lt;code&gt;accumulate&lt;/code&gt; construct, time-window contructs, and temporal operators. We saw that by using techniques such as &lt;i&gt;inference&lt;/i&gt;, we can infer new, complex information from simple events, allowing us to write more-advanced and larger rule bases that are still easy to understand by both software engineers and domain experts.&lt;/p&gt; &lt;p&gt;Decision Manager 7 CEP provides an excellent base for a more-advanced real-time credit card fraud detection system when combined with other platforms and techniques such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Data Grid/Infinispan for caching of the context of credit cards, providing fast in-memory access to data&lt;/li&gt; &lt;li&gt;Vert.x to implement asynchronous reactive execution of credit card events coming from a large set of clients from various sources&lt;/li&gt; &lt;li&gt;Red Hat AMQ/Kafka for ingestion and stream processing of transaction events&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We will explore these architectures in future articles.&lt;/p&gt; &lt;div&gt; &lt;p&gt;&lt;img class="alignleft" title="Duncan Doyle" src="https://i0.wp.com/en.gravatar.com/userimage/106146330/2f0c06257ede9b94dfb276ccbdb8cab4.jpg" alt="Duncan Doyle" width="119" height="119" /&gt;&lt;/p&gt; &lt;h3&gt;About the author:&lt;/h3&gt; &lt;p&gt;&lt;a href="http://twitter.com/DuncanDoyle" target="_blank" rel="noopener"&gt;Duncan Doyle&lt;/a&gt; is the Technical Marketing Manager for the Decision Manager and Process Automation Manager platforms at Red Hat. With a background in Red Hat Consulting and Services, Duncan has worked extensively with large Red Hat customers to build advanced, open-source, decision management and business process management solutions.&lt;/p&gt; &lt;p&gt;He has a strong background in technologies and concepts like Service Oriented Architecture, Continuous Integration &amp;#38; Delivery, rules engines and BPM platforms and is a subject matter expert (SME) on multiple JBoss Middleware technologies, including, but not limited to, JBoss EAP, HornetQ, Fuse, DataGrid, Decision Manager and Process Automation Manager. When he’s not working on open-source solutions and technology, he is building Lego with his son and daughter or jamming along some 90’s rock-music on his Fender Stratocaster.&lt;/p&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;linkname=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F26%2Fdetecting-credit-card-fraud-with-red-hat-decision-manager-7%2F&amp;#38;title=Detecting%20credit%20card%20fraud%20with%20Red%20Hat%20Decision%20Manager%207" data-a2a-url="https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/" data-a2a-title="Detecting credit card fraud with Red Hat Decision Manager 7"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/"&gt;Detecting credit card fraud with Red Hat Decision Manager 7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HdMXRDAKOI4" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Decision Manager provides a vast array of decision management functionality. From the Decision Tables feature in the new Decision Model and Notation (DMN) v1.1, which implements the full FEEL Compliance Level 3 of the DMN specification, to Predictive Model Markup Language (PMML). Another powerful feature is the Complex Event Processing (CEP) engine. This engine provides the ability to dete...</summary><dc:creator>Duncan Doyle</dc:creator><dc:date>2018-07-26T11:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/</feedburner:origLink></entry><entry><title>Debezium 0.9 Alpha1 and 0.8.1 Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ll7GuIgNSu0/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_debezium" scheme="searchisko:content:tags" /><category term="feed_name_debezium" scheme="searchisko:content:tags" /><category term="oracle" scheme="searchisko:content:tags" /><category term="postgres" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><category term="sqlserver" scheme="searchisko:content:tags" /><author><name>Gunnar Morling</name></author><id>searchisko:content:id:jbossorg_blog-debezium_0_9_alpha1_and_0_8_1_released</id><updated>2018-07-27T15:43:04Z</updated><published>2018-07-26T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just two weeks after the Debezium 0.8 release, I’m very happy to announce the release of Debezium &lt;strong&gt;0.9.0.Alpha1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The main feature of the new version is a first work-in-progress version of the long-awaited Debezium connector for &lt;a href="https://www.microsoft.com/en-us/sql-server"&gt;MS SQL Server&lt;/a&gt;. Based on the &lt;a href="https://docs.microsoft.com/en-us/sql/relational-databases/track-changes/about-change-data-capture-sql-server?view=sql-server-2017"&gt;CDC functionality&lt;/a&gt; available in the Enterprise and Standard editions, the new connector lets you stream data changes out of Microsoft’s popular RDBMS.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Besides that we’ve continued the work on the Debezium &lt;a href="http://debezium.io/docs/connectors/oracle/"&gt;Oracle connector&lt;/a&gt;. Most notably, it supports initial snapshots of captured tables now. We’ve also upgraded Apache Kafka in our Docker images to 1.1.1 (&lt;a href="https://issues.jboss.org/browse/DBZ-829"&gt;DBZ-829&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please take a look at the &lt;a href="http://debezium.io/docs/releases/#release-0-9-0-alpha1"&gt;change log&lt;/a&gt; for the complete list of changes in 0.9.0.Alpha1 and general upgrade notes.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; &lt;span class="line-through"&gt;At the time of writing (2018-07-26), the release artifacts (connector archives) are available on &lt;a href="http://central.maven.org/maven2/io/debezium/"&gt;Maven Central&lt;/a&gt;. We’ll upload the Docker images for 0.9.0.Alpha1 to &lt;a href="https://hub.docker.com/u/debezium/"&gt;Docker Hub&lt;/a&gt; as soon as possible.&lt;/span&gt; The Docker images are already uplodaded and ready for use under tags &lt;code&gt;0.9.0.Alpha1&lt;/code&gt; and rolling &lt;code&gt;0.9&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="sql_server_connector"&gt;&lt;a class="anchor" href="#sql_server_connector"&gt;&lt;/a&gt;SQL Server Connector&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Support for SQL Server had been on the wish list of Debezium users for a long time (the original issue was &lt;a href="https://issues.jboss.org/browse/DBZ-40"&gt;DBZ-40&lt;/a&gt;). Thanks to lots of basic infrastructure created while working on the Oracle connector, we were finally able to come up with a first preview of this new connector in comparatively short time of development.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Just as the Oracle connector, the one for SQL Server is under active development and should be considered an incubating feature at this point. So for instance the structure of emitted change messages may change in upcoming releases. In terms of features, it supports initial snapshotting and capturing changes via SQL Server’s CDC functionality. There’s support for the most common column types, table whitelisting/blacklisting and more. The most significant feature missing is support for structural changes of tables while the connector is running. This is the next feature we’ll work on and it’s planned to be delivered as part of the next 0.9 release (see &lt;a href="https://issues.jboss.org/browse/DBZ-812"&gt;DBZ-812&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’d be very happy to learn about any feedback you may have on this newest connector of the Debezium family. If you spot any bugs or have feature requests for it, please create a report in our &lt;a href="https://issues.jboss.org/browse/DBZ"&gt;JIRA tracker&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="oracle_connector"&gt;&lt;a class="anchor" href="#oracle_connector"&gt;&lt;/a&gt;Oracle Connector&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Debezium connector for Oracle is able to take initial snapshots now. By means of the new connector option &lt;code&gt;snapshot.mode&lt;/code&gt; you can control whether &lt;em&gt;read&lt;/em&gt; events for all the records of all the captured tables should be emitted.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition the support for numeric data types has been honed (&lt;a href="https://issues.jboss.org/browse/DBZ-804"&gt;DBZ-804&lt;/a&gt;); any integer columns (i.e. &lt;code&gt;NUMBER&lt;/code&gt; with a scale &amp;lt;\= 0) will be emitted using the corresponding &lt;code&gt;int8&lt;/code&gt;/&lt;code&gt;int16&lt;/code&gt;/&lt;code&gt;int32&lt;/code&gt;/&lt;code&gt;int64&lt;/code&gt; field type, if the columns precision allows for that.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve also spent some time on expanding the Oracle &lt;a href="http://debezium.io/docs/connectors/oracle/"&gt;connector documentation&lt;/a&gt;, which covers the structure of emitted change events and all the data type mappings in detail now.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="debezium_0_8_1_final"&gt;&lt;a class="anchor" href="#debezium_0_8_1_final"&gt;&lt;/a&gt;Debezium 0.8.1.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Together with Debezium 0.9.0.Alpha1 we also did another release of the current stable Debezium version 0.8.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While 0.9 at this point is more interesting to those eager to try out the latest developments in the Oracle and SQL Server connectors, 0.8.1.Final is a recommended upgrade especially to the users of the Postgres connector. This release fixes an issue where it could happen that WAL segments on the server were retained longer than necessary, in case only records of non-whitelisted tables changed for a while. This has been addressed by means of supporting heartbeat messages (as already known from the MySQL connector) also for Postgres (&lt;a href="https://issues.jboss.org/browse/DBZ-800"&gt;DBZ-800&lt;/a&gt;). This lets the connector regularly commit offsets to Kafka Connect which also serves as the hook to acknowledge processed LSNs with the Postgres server.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the list of all changes done in Debezium 0.8.1.Final in the &lt;a href="http://debezium.io/docs/releases/#release-0-8-1-final"&gt;change log&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what_s_next"&gt;&lt;a class="anchor" href="#what_s_next"&gt;&lt;/a&gt;What’s next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As discussed above, we’ll work on supporting structural changes to captured tables while the SQL Server connector is running. The same applies to the Oracle connector. This will require some work on our DDL parsers, but thanks to the foundations provided by our recent migration of the MySQL DDL parser to Antlr, this should be manageable.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The other big focus of work with be to provide an alternative implementation for getting changes from Oracle which isn’t based on the XStream API. We’ve done some experiments with LogMiner and are also actively exploring further alternatives. While some details are still unclear, we are optimistic to have something to release in this area soon.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you’d like to learn more about some middle and long term ideas, please check out our &lt;a href="http://debezium.io/docs/roadmap/"&gt;roadmap&lt;/a&gt;. Also please get in touch with us if you got any ideas or suggestions for future development.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="about_debezium"&gt;&lt;a class="anchor" href="#about_debezium"&gt;&lt;/a&gt;About Debezium&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debezium is an open source distributed platform that turns your existing databases into event streams, so applications can see and respond almost instantly to each committed row-level change in the databases. Debezium is built on top of &lt;a href="http://kafka.apache.org/"&gt;Kafka&lt;/a&gt; and provides &lt;a href="http://kafka.apache.org/documentation.html#connect"&gt;Kafka Connect&lt;/a&gt; compatible connectors that monitor specific database management systems. Debezium records the history of data changes in Kafka logs, so your application can be stopped and restarted at any time and can easily consume all of the events it missed while it was not running, ensuring that all events are processed correctly and completely. Debezium is &lt;a href="http://debezium.io/license"&gt;open source&lt;/a&gt; under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="get_involved"&gt;&lt;a class="anchor" href="#get_involved"&gt;&lt;/a&gt;Get involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We hope you find Debezium interesting and useful, and want to give it a try. Follow us on Twitter &lt;a href="https://twitter.com/debezium"&gt;@debezium&lt;/a&gt;, &lt;a href="https://gitter.im/debezium/user"&gt;chat with us on Gitter&lt;/a&gt;, or join our &lt;a href="https://groups.google.com/forum/#!forum/debezium"&gt;mailing list&lt;/a&gt; to talk with the community. All of the code is open source &lt;a href="https://github.com/debezium/"&gt;on GitHub&lt;/a&gt;, so build the code locally and help us improve ours existing connectors and add even more connectors. If you find problems or have ideas how we can improve Debezium, please let us know or &lt;a href="https://issues.jboss.org/projects/DBZ/issues/"&gt;log an issue&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ll7GuIgNSu0" height="1" width="1" alt=""/&gt;</content><summary>Just two weeks after the Debezium 0.8 release, I’m very happy to announce the release of Debezium 0.9.0.Alpha1! The main feature of the new version is a first work-in-progress version of the long-awaited Debezium connector for MS SQL Server. Based on the CDC functionality available in the Enterprise and Standard editions, the new connector lets you stream data changes out of Microsoft’s popular RD...</summary><dc:creator>Gunnar Morling</dc:creator><dc:date>2018-07-26T00:00:00Z</dc:date><feedburner:origLink>http://debezium.io/blog/2018/07/26/debezium-0-9-0-alpha1-released/</feedburner:origLink></entry><entry><title>Sabre chooses Red Hat OpenShift for cloud-native DevOps platform</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z3OJyzhe9GM/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Native" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Red Hat Customers" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Sabre" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-sabre_chooses_red_hat_openshift_for_cloud_native_devops_platform</id><updated>2018-07-25T15:50:45Z</updated><published>2018-07-25T15:50:45Z</published><content type="html">&lt;p&gt;As part of its strategy to re-imagine the business of travel, Sabre Corporation today announced that it will leverage &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; as the foundation for its Next Generation Platform initiative. OpenShift will be the basis of a modern architecture that includes microservices, development and operations (DevOps), and a multi-faceted cloud strategy to lead an industry evolution in the future of retailing, distribution, and fulfillment through innovative technology. OpenShift, built on containers and Kubernetes, is the the industry&amp;#8217;s leading enterprise Kubernetes platform for running existing and cloud-native applications in any cloud.&lt;/p&gt; &lt;p&gt;&amp;#8220;The Next Generation Platform is the cornerstone of Sabre&amp;#8217;s long-term technology strategy,&amp;#8221; said Vish Saoji, Sabre CTO. &amp;#8220;Red Hat has delivered the enterprise-hardened software environment we need to help drive our technology transformation, and this collaboration allows us to build upon that architecture and execute our plan.&amp;#8221;&lt;span id="more-510467"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Sabre customers will benefit through enhanced stability, world-class security, &lt;strong&gt;accelerated speed to market and the development of new capabilities such as NDC-enabled solutions. The two companies will work together on product roadmap needs, with Red Hat fine-tuning their approach to meet Sabre&amp;#8217;s development standards.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&amp;#8220;We are very pleased to be working with an established travel technology leader like Sabre to help fuel their digital transformation,&amp;#8221; said Ashesh Badani, vice president and general manager, Cloud Platforms Business Unit, Red Hat. &amp;#8220;Red Hat OpenShift Container Platform pairs emerging technologies with enterprise-grade stability and enhanced security, enabling Sabre to bring new innovations to market more quickly while helping to meet customer needs for service availability.&amp;#8221;&lt;/p&gt; &lt;p&gt;This collaboration with Red Hat help Sabre complete the last phase of its exit from the Transaction Processing Facility (TPF) mainframe operating system and emphasizes that all future &lt;strong&gt;development for next-generation retailing, distribution and fulfillment will take advantage of innovative architecture.&lt;/strong&gt; This next-generation focus is also supported by Sabre&amp;#8217;s recent agreement with Microsoft, Sabre&amp;#8217;s commercial applications will migrate to Microsoft Azure, and the agreement with Amazon Web Services to execute Sabre&amp;#8217;s innovative cloud strategy.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;hr /&gt; &lt;h3&gt;&lt;strong&gt;Learn more about app dev with OpenShift, Kubernetes, microservices, and DevOps:&lt;/strong&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Try OpenShift Online at &lt;a href="https://www.openshift.com/"&gt;OpenShift.com&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Learn OpenShift using online tutorials with no downloads/installation required &amp;#8211; &lt;a href="https://learn.openshift.com/"&gt;learn.openshift.com&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Sign up for &lt;a href="https://openshift.io/"&gt;Red Hat OpenShift.io&lt;/a&gt; an open online development environment for planning, creating, and deploying hybrid cloud services&lt;/li&gt; &lt;li&gt;Use &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt; to run your own OpenShift cluster on your laptop&lt;/li&gt; &lt;li&gt;Explore cloud-native development and deployment topics on developers.redhat.com: &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/microservices/"&gt;Microservices&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Service Mesh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/devops/"&gt;DevOps&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;linkname=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fsabre-chooses-red-hat-openshift-for-cloud-native-devops-platform%2F&amp;#38;title=Sabre%20chooses%20Red%20Hat%20OpenShift%20for%20cloud-native%20DevOps%20platform" data-a2a-url="https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/" data-a2a-title="Sabre chooses Red Hat OpenShift for cloud-native DevOps platform"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/"&gt;Sabre chooses Red Hat OpenShift for cloud-native DevOps platform&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z3OJyzhe9GM" height="1" width="1" alt=""/&gt;</content><summary>As part of its strategy to re-imagine the business of travel, Sabre Corporation today announced that it will leverage Red Hat OpenShift Container Platform as the foundation for its Next Generation Platform initiative. OpenShift will be the basis of a modern architecture that includes microservices, development and operations (DevOps), and a multi-faceted cloud strategy to lead an industry evolutio...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2018-07-25T15:50:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/25/sabre-chooses-red-hat-openshift-for-cloud-native-devops-platform/</feedburner:origLink></entry><entry><title>Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AteqCdPoPfI/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="migration" scheme="searchisko:content:tags" /><category term="modernization" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolkit" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolset" scheme="searchisko:content:tags" /><category term="reports" scheme="searchisko:content:tags" /><category term="rhamt" scheme="searchisko:content:tags" /><author><name>Christian Huffman</name></author><id>searchisko:content:id:jbossorg_blog-announcing_red_hat_application_migration_toolkit_4_1_0_now_with_technical_reports</id><updated>2018-07-25T11:00:40Z</updated><published>2018-07-25T11:00:40Z</published><content type="html">&lt;p&gt;[In case you aren’t following the &lt;a href="https://middlewareblog.redhat.com/"&gt;Red Hat JBoss Middleware blog&lt;/a&gt;, we are reposting &lt;a href="https://middlewareblog.redhat.com/2018/07/17/introducing-technical-reports/"&gt;this article&lt;/a&gt; on developers.redhat.com.]&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/"&gt;Red Hat Application Migration Toolkit&lt;/a&gt; (RHAMT) 4.1.0 has been released, and with it a new feature that I&amp;#8217;d like to highlight in this article—Technology Reports.&lt;/p&gt; &lt;p&gt;If you’re not familiar with RHAMT, check out my &lt;a href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/"&gt;previous article&lt;/a&gt; that introduces RHAMT and describes how you can use it to help with migration existing applications to a modern application platform by analyzing your code base.&lt;/p&gt; &lt;h2&gt;Technology reports&lt;/h2&gt; &lt;p&gt;This new feature in RHAMT provides an aggregate listing of the technologies used, grouped by function, for the analyzed applications. It shows how the technologies are distributed. After analysis has been performed, using this report hundreds of applications can be quickly compared. In addition, the size, number of libraries, and story point totals of each application are displayed, allowing you to quickly determine each application’s type from a single report, for example:&lt;span id="more-510257"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png"&gt;&lt;img class=" aligncenter wp-image-510277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-300x143.png" alt="" width="300" height="143" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-300x143.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview-768x367.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-overview.png 865w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Examining application_13 in the above list, we can see that this is likely a secured front-end application with a cache for performance. It contains several libraries, most of which pertain to security in some form.&lt;/p&gt; &lt;p&gt;Each application can be further examined to identify the technologies in use. For instance, drilling down into application_13 shows this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application.png"&gt;&lt;img class=" aligncenter wp-image-510287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-1024x419.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-300x123.png" alt="" width="300" height="123" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-300x123.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-768x314.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application-1024x419.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/technology-report-application.png 1280w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here, we can see the precise libraries in use within each category. As previously noted, this application uses a large number of security libraries, and we can precisely identify the technologies in use.&lt;/p&gt; &lt;p&gt;Regardless of how you use the Technology Reports feature, I’m certain it will be useful in your migration and modernization efforts.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F25%2Fannouncing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports%2F&amp;#38;title=Announcing%20Red%20Hat%20Application%20Migration%20Toolkit%204.1.0%3A%20Now%20with%20technical%20reports" data-a2a-url="https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/" data-a2a-title="Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/"&gt;Announcing Red Hat Application Migration Toolkit 4.1.0: Now with technical reports&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AteqCdPoPfI" height="1" width="1" alt=""/&gt;</content><summary>[In case you aren’t following the Red Hat JBoss Middleware blog, we are reposting this article on developers.redhat.com.] Red Hat Application Migration Toolkit (RHAMT) 4.1.0 has been released, and with it a new feature that I’d like to highlight in this article—Technology Reports. If you’re not familiar with RHAMT, check out my previous article that introduces RHAMT and describes how you can use i...</summary><dc:creator>Christian Huffman</dc:creator><dc:date>2018-07-25T11:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/25/announcing-red-hat-application-migration-toolkit-4-1-0-now-with-technical-reports/</feedburner:origLink></entry><entry><title>Third maintenance release for Hibernate Search 5.10</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wcJcFAJu2_Y/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-third_maintenance_release_for_hibernate_search_5_10</id><updated>2018-07-25T08:09:22Z</updated><published>2018-07-25T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;While we are still working on Hibernate Search 6 to get it ready for an Alpha, things are relatively quiet on the Search 5 side. However, we did not forget about it: we just published Hibernate Search version 5.10.3.Final, the third maintenance release of Hibernate Search 5.10. This release upgrades Hibernate Search to Hibernate ORM 5.3.3.Final, and adds a few minor improvements.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3234"&gt;HSEARCH-3234&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3210"&gt;HSEARCH-3210&lt;/a&gt;: Upgrade to ORM 5.3.3.Final and Hibernate Common Annotations 5.0.4.Final. Hibernate ORM 5.3.3.Final includes quite a few bug fixes and improvements, so be sure to &lt;a href="http://in.relation.to/2018/07/24/hibernate-orm-533-final-out/"&gt;check it out&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3233"&gt;HSEARCH-3233&lt;/a&gt;: Overriding an analyzer in the QueryBuilder with an unknown analyzer should now lead to a proper SearchException.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3228"&gt;HSEARCH-3228&lt;/a&gt;: The Elasticsearch integration now uses Gson 2.8.5, thanks to Leandro Freitas.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3215"&gt;HSEARCH-3215&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3216"&gt;HSEARCH-3216&lt;/a&gt;: A few typos in the documentation were fixed, thanks to José Santos.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The other changes are mainly related to our build process, working toward testing Hibernate Search on JDK11.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31686"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/search/releases/5.10/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wcJcFAJu2_Y" height="1" width="1" alt=""/&gt;</content><summary>While we are still working on Hibernate Search 6 to get it ready for an Alpha, things are relatively quiet on the Search 5 side. However, we did not forget about it: we just published Hibernate Search version 5.10.3.Final, the third maintenance release of Hibernate Search 5.10. This release upgrades Hibernate Search to Hibernate ORM 5.3.3.Final, and adds a few minor improvements. What’s new? HSEAR...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2018-07-25T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/25/hibernate-search-5-10-3-Final/</feedburner:origLink></entry><entry><title>How to improve .NET Core Kestrel performance using a Linux-specific transport</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Y3hdUtXZZKk/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="benchmark" scheme="searchisko:content:tags" /><category term="Container Development Kit" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kestrel" scheme="searchisko:content:tags" /><category term="libuv" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="TechEmpower" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-how_to_improve_net_core_kestrel_performance_using_a_linux_specific_transport</id><updated>2018-07-24T18:00:51Z</updated><published>2018-07-24T18:00:51Z</published><content type="html">&lt;p&gt;ASP.NET Core is the web framework for .NET Core. Performance is a key feature. The stack is heavily optimized and continuously benchmarked. Kestrel is the name of the HTTP server. In this blog post, we&amp;#8217;ll replace Kestrel&amp;#8217;s networking layer with a Linux-specific implementation and benchmark it against the default out-of-the-box implementations. The TechEmpower web framework benchmarks are used to compare the network layer performance.&lt;/p&gt; &lt;p&gt;&lt;span id="more-506607"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Transport abstraction&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Kestrel supports replacing the network implementation thanks to the Transport abstraction. ASP.NET Core 1.x uses &lt;code&gt;&lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt;&lt;/code&gt; for its network implementation. &lt;code&gt;libuv&lt;/code&gt; is the asynchronous I/O library that underpins Node.js. The use of &lt;code&gt;libuv&lt;/code&gt; predates .NET Core, when cross-platform ASP.NET was called ASP.NET 5. Then scope broadened to the cross-platform .NET implementation that we know now as &lt;em&gt;.&lt;/em&gt;NET Core. As part of .NET Core, a network implementation became available (using the &lt;code&gt;Socket&lt;/code&gt; class). ASP.NET Core 2.0 introduced the Transport abstraction in Kestrel to make it possible to change from the &lt;code&gt;libuv&lt;/code&gt; to a Socket-based implementation. For version 2.1, many optimizations were made to the Socket implementation and the Sockets transport has become the default in Kestrel.&lt;/p&gt; &lt;p&gt;The Transport abstraction allows other network implementations to be plugged in. For example, you could leverage the Windows RIO socket API or user-space network stacks. In this blog post, we&amp;#8217;ll look at a Linux-specific transport. The implementation can be used as a direct replacement for the &lt;code&gt;libuv&lt;/code&gt;/Sockets transport. It doesn&amp;#8217;t need privileged capabilities and it works in constrained containers, for example, when running on Red Hat &lt;a href="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/"&gt;OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For future versions, Kestrel aims to become more usable as a &lt;a href="https://github.com/aspnet/KestrelHttpServer/issues/1980"&gt;basis for non-HTTP servers&lt;/a&gt;. The Transport and related abstractions will still change as part of that project.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Benchmark introduction&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Microsoft is continuously benchmarking the ASP.NET Core stack. The results can be seen at &lt;a href="https://aka.ms/aspnet/benchmarks"&gt;https://aka.ms/aspnet/benchmarks&lt;/a&gt;. The benchmarks include scenarios from the &lt;a href="https://www.techempower.com/benchmarks/"&gt;TechEmpower web framework benchmarks&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It is easy to get lost watching the benchmark results, so let me give a short overview of the TechEmpower benchmarks.&lt;/p&gt; &lt;p&gt;There are a number of &lt;a href="https://www.techempower.com/benchmarks/#section=code"&gt;scenarios&lt;/a&gt; (also called test types). The Fortunes test type is the most interesting, because it includes using an object-relational mapper (ORM) and a database. This is a common use-case in a web application/service. Previous versions of ASP.NET Core did not perform well in this scenario. ASP.NET Core 2.1 improved it significantly thanks to optimizations in the stack and also in the &lt;a href="http://www.roji.org/npgsql-4-perf"&gt;PostgreSQL driver&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The other scenarios are less representative of a typical application. They stress particular aspects of the stack. They may be interesting to look at if they match your use-case closely. For framework developers, they help identify opportunities to optimize the stack further.&lt;/p&gt; &lt;p&gt;For example, consider the Plaintext scenario. This scenario involves a client sending 16 requests back-to-back (&lt;a href="https://en.wikipedia.org/wiki/HTTP_pipelining"&gt;pipelined&lt;/a&gt;) for which the server knows the response without needing to perform I/O operations or computation. This is not representative of a typical request, but it is a good stress test for parsing HTTP requests.&lt;/p&gt; &lt;p&gt;Each implementation has a class. For example, ASP.NET Core Plaintext has a &lt;em&gt;platform&lt;/em&gt;, &lt;em&gt;micro,&lt;/em&gt; and &lt;em&gt;full&lt;/em&gt; implementation. The full implementation is using the MVC middleware. The micro implementation is implemented at the pipeline level, and the platform implementation is directly building on top of Kestrel. While the platform class provides an idea of how powerful the engine is, it is not an API that is used to program against by application developers.&lt;/p&gt; &lt;p&gt;The benchmark results include a Latency tab. Some implementations achieve a very high number of requests per second but at a considerable latency cost.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Linux transport&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;Similar to the other implementations, the Linux transport makes use of non-blocking sockets and &lt;a href="https://en.wikipedia.org/wiki/HTTP_pipelining"&gt;epoll&lt;/a&gt;. Like .NET Core&amp;#8217;s &lt;code&gt;Socket&lt;/code&gt;, the &lt;code&gt;eventloop&lt;/code&gt; is implemented in managed (C#) code. This is different from the &lt;code&gt;libuv&lt;/code&gt; loop, which is part of the native &lt;code&gt;libuv&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;Two Linux-specific features are used: &lt;code&gt;&lt;a href="https://lwn.net/Articles/542629/"&gt;SO_REUSEPORT&lt;/a&gt;&lt;/code&gt; lets the kernel load-balance accepted connections over a number of threads, and the Linux AIO API is used to batch send and receive calls.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Benchmark&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;For our benchmark, we&amp;#8217;ll use the JSON and Plaintext scenarios at the micro class. For the JSON benchmark, the web server responds with a simple JSON object that is serialized for each request. This means that for each request, our web server will do a tiny amount of useful work which makes the transport weigh through. For the Plaintext scenario, the server responds with a fixed string. Due to the pipelining (per 16 requests), only 1/16 of the requests need to do network I/O.&lt;/p&gt; &lt;p&gt;Each transport has a number of settings. Both the &lt;code&gt;libuv&lt;/code&gt; and Linux transport have a property to set the number of threads for receiving/sending messages. The Sockets transport performs sends and receives on the &lt;code&gt;ThreadPool&lt;/code&gt;. It has an &lt;code&gt;IOQueueCount&lt;/code&gt; setting that we&amp;#8217;ll set instead.&lt;/p&gt; &lt;p&gt;The graphs below show the HTTP requests per second (RPS) for varying &lt;code&gt;ThreadCount&lt;/code&gt;/&lt;code&gt;IOQueueCount&lt;/code&gt; settings.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-506647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/plaintext-300x186.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-506637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/json.png 600w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/json-300x186.png 300w" sizes="(max-width: 600px) 100vw, 600px" /&gt;&lt;/p&gt; &lt;p&gt;We can see that each transport is initially limited by the number of allocated threads. The actual handling happens on the &lt;code&gt;ThreadPool&lt;/code&gt;, which is not fully loaded yet. We see Sockets has a higher RPS because it is also using the &lt;code&gt;ThreadPool&lt;/code&gt; for network sends/receives. We can’t compare it with the other transports because it is constrained in a different way (it can use more threads for transporting).&lt;/p&gt; &lt;table cellspacing="0" align="center"&gt; &lt;tbody&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs &lt;code&gt;libuv&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Plaintext&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+15%&lt;/td&gt; &lt;/tr&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+20%&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div style="text-align: center;"&gt;Transport is CPU-constrained&lt;/div&gt; &lt;p&gt;When we increase the &lt;code&gt;ThreadCount&lt;/code&gt; sufficiently, the transport is no longer the limiting factor. Now the constraint becomes either the CPU or network bandwidth.&lt;/p&gt; &lt;p&gt;The TechEmpower Round 16 benchmark hit the network bandwidth for the Plaintext scenario. If you look at the &lt;a href="https://www.techempower.com/benchmarks/#section=data-r16&amp;#38;hw=ph&amp;#38;test=plaintext"&gt;benchmark results&lt;/a&gt;, you see the top results are all about the same value. These benchmarks indicate underutilized CPU.&lt;/p&gt; &lt;p&gt;For our benchmark, the CPU is fully loaded. The processor is busy sending/receiving and handling the requests. The difference we see between the scenarios is due to the different workload per network request. For Plaintext, we receive 16 pipelined HTTP requests with a single network request. For JSON, there is an HTTP request per network request. This makes the transport weigh through much more in the JSON scenario compared to the Plaintext scenario.&lt;/p&gt; &lt;table cellspacing="0" align="center"&gt; &lt;tbody&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;&lt;code&gt;libuv&lt;/code&gt; vs Sockets&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs &lt;code&gt;libuv&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Linux vs Sockets&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Plaintext&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+9%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+0%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+9%&lt;/td&gt; &lt;/tr&gt; &lt;tr style="border: 1px solid black;"&gt; &lt;td style="border: 1px solid black;"&gt;&lt;strong&gt;Json&lt;/strong&gt;&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+17%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+10%&lt;/td&gt; &lt;td style="border: 1px solid black; text-align: right;"&gt;+28%&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div style="text-align: center;"&gt;App is CPU-constrained&lt;/div&gt; &lt;h2&gt;&lt;strong&gt;Using the Linux transport&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;The Kestrel Linux transport is an experimental implementation. You can try it by using the &lt;code&gt;2.1.0-preview1&lt;/code&gt; package published on &lt;a href="https://www.myget.org"&gt;myget.org&lt;/a&gt;. If you try this package, you can use &lt;a href="https://github.com/redhat-developer/kestrel-linux-transport/issues/61"&gt;this GitHub issue&lt;/a&gt; to give feedback and to be informed of (security) issues. Based on your feedback, we&amp;#8217;ll see if it makes sense to maintain a supported 2.1 version published on &lt;a href="https://www.nuget.org"&gt;nuget.org&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Do this to add the myget feed to a &lt;code&gt;NuGet.Config&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;?xml version="1.0" encoding="utf-8"?&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;packageSources&amp;#62; &amp;#60;add key="rh" value="https://www.myget.org/F/redhat-dotnet/api/v3/index.json" /&amp;#62; &amp;#60;/packageSources&amp;#62; &amp;#60;/configuration&amp;#62; &lt;/pre&gt; &lt;p&gt;And add a package reference in your &lt;code&gt;csproj&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;PackageReference Include="RedHat.AspNetCore.Server.Kestrel.Transport.Linux" Version="2.1.0-preview1" /&amp;#62; &lt;/pre&gt; &lt;p&gt;Then we call &lt;code&gt;UseLinuxTransport&lt;/code&gt; when creating the &lt;code&gt;WebHost&lt;/code&gt; in &lt;code&gt;Program.cs&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;public static IWebHost BuildWebHost(string[] args) =&amp;#62; WebHost.CreateDefaultBuilder(args) &lt;em&gt;.UseLinuxTransport()&lt;/em&gt; .UseStartup() .Build(); &lt;/pre&gt; &lt;p&gt;It is safe to call &lt;code&gt;UseLinuxTransport&lt;/code&gt; on non-Linux platforms. The method will change the transport only when the application runs on a Linux system.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;In this blog post, you&amp;#8217;ve learned about Kestrel and how its Transport abstraction supports replacing the network implementation. We took a closer look at TechEmpower benchmarks and explored how CPU and network limits affect benchmark results. We’ve see that a Linux-specific transport can give a measurable gain compared to the default out-of-the-box implementations.&lt;/p&gt; &lt;p&gt;For information about running .NET Core on Red Hat Enterprise Linux and OpenShift, see the &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/"&gt;.NET Core &lt;em&gt;Getting Started Guide&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;linkname=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F24%2Fimprov-net-core-kestrel-performance-linux%2F&amp;#38;title=How%20to%20improve%20.NET%20Core%20Kestrel%20performance%20using%20a%20Linux-specific%20transport" data-a2a-url="https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/" data-a2a-title="How to improve .NET Core Kestrel performance using a Linux-specific transport"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/"&gt;How to improve .NET Core Kestrel performance using a Linux-specific transport&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Y3hdUtXZZKk" height="1" width="1" alt=""/&gt;</content><summary>ASP.NET Core is the web framework for .NET Core. Performance is a key feature. The stack is heavily optimized and continuously benchmarked. Kestrel is the name of the HTTP server. In this blog post, we’ll replace Kestrel’s networking layer with a Linux-specific implementation and benchmark it against the default out-of-the-box implementations. The TechEmpower web framework benchmarks are used to c...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2018-07-24T18:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/24/improv-net-core-kestrel-performance-linux/</feedburner:origLink></entry></feed>
